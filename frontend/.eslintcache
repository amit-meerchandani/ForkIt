[{"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\index.js":"1","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\App.js":"2","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\store.js":"3","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\actions\\userActions.js":"4","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\context\\socketContex.jsx":"5","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\home\\Home.js":"6","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\login\\Login.js":"7","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\newpost\\NewPost.js":"8","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\header\\Header.js":"9","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\account\\Account.js":"10","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\updateProfile\\UpdateProfile.js":"11","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\register\\Register.js":"12","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\forgotPassword\\ForgotPassword.js":"13","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\updatePassword\\UpdatePassword.js":"14","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\notfound\\NotFound.js":"15","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\forgotPassword\\ResetPassword.js":"16","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\search\\Search.js":"17","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\userProfile\\UserProfile.js":"18","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Chat.js":"19","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\slices\\postSlices.js":"20","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\slices\\userSlices.js":"21","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\actions\\postActions.js":"22","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\user\\User.js":"23","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\loader\\Loader.js":"24","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\post\\Post.js":"25","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Contacts.js":"26","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\MainChat.js":"27","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\utilis\\prograamingName.js":"28","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\zhustand\\useConversation.js":"29","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\commentCard\\CommentCard.js":"30","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\ContactSearchInput.js":"31","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\ContactsList.js":"32","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\SendMessage.js":"33","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\ImageUploadPreview.js":"34","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Messages.js":"35","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\NoChatSelected.js":"36","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\CurrentUserHeader.js":"37","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Message.js":"38","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Contact.js":"39","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\extractTime.js":"40","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useListenMessages.js":"41","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useGetMessages.js":"42","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useSendMessage.js":"43","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useGetEmotionMessage.js":"44","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useGetConversations.js":"45","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useContactMessages.js":"46"},{"size":267,"mtime":1713814445971,"results":"47","hashOfConfig":"48"},{"size":3145,"mtime":1713814445905,"results":"49","hashOfConfig":"48"},{"size":641,"mtime":1713814448306,"results":"50","hashOfConfig":"48"},{"size":7735,"mtime":1713814448391,"results":"51","hashOfConfig":"48"},{"size":1206,"mtime":1713814448003,"results":"52","hashOfConfig":"48"},{"size":4370,"mtime":1713814447188,"results":"53","hashOfConfig":"48"},{"size":1813,"mtime":1713814447339,"results":"54","hashOfConfig":"48"},{"size":1837,"mtime":1713814447420,"results":"55","hashOfConfig":"48"},{"size":1830,"mtime":1713814447102,"results":"56","hashOfConfig":"48"},{"size":5127,"mtime":1713814446253,"results":"57","hashOfConfig":"48"},{"size":2753,"mtime":1713814447872,"results":"58","hashOfConfig":"48"},{"size":4585,"mtime":1713814447651,"results":"59","hashOfConfig":"48"},{"size":1494,"mtime":1713814446948,"results":"60","hashOfConfig":"48"},{"size":1866,"mtime":1713814447799,"results":"61","hashOfConfig":"48"},{"size":591,"mtime":1713814447497,"results":"62","hashOfConfig":"48"},{"size":1826,"mtime":1713814447022,"results":"63","hashOfConfig":"48"},{"size":1771,"mtime":1713814447727,"results":"64","hashOfConfig":"48"},{"size":6147,"mtime":1713814447962,"results":"65","hashOfConfig":"48"},{"size":452,"mtime":1713814446298,"results":"66","hashOfConfig":"48"},{"size":2247,"mtime":1713814448431,"results":"67","hashOfConfig":"48"},{"size":4071,"mtime":1713814448472,"results":"68","hashOfConfig":"48"},{"size":4171,"mtime":1713814448349,"results":"69","hashOfConfig":"48"},{"size":504,"mtime":1713814447916,"results":"70","hashOfConfig":"48"},{"size":205,"mtime":1713814447264,"results":"71","hashOfConfig":"48"},{"size":9931,"mtime":1713814447576,"results":"72","hashOfConfig":"48"},{"size":363,"mtime":1713814446425,"results":"73","hashOfConfig":"48"},{"size":1863,"mtime":1713814446572,"results":"74","hashOfConfig":"48"},{"size":4299,"mtime":1713814448523,"results":"75","hashOfConfig":"48"},{"size":298,"mtime":1713814448571,"results":"76","hashOfConfig":"48"},{"size":1882,"mtime":1713814446872,"results":"77","hashOfConfig":"48"},{"size":340,"mtime":1713814446387,"results":"78","hashOfConfig":"48"},{"size":606,"mtime":1713814446463,"results":"79","hashOfConfig":"48"},{"size":3248,"mtime":1713814446722,"results":"80","hashOfConfig":"48"},{"size":423,"mtime":1713814446535,"results":"81","hashOfConfig":"48"},{"size":1628,"mtime":1713814446648,"results":"82","hashOfConfig":"48"},{"size":502,"mtime":1713814446685,"results":"83","hashOfConfig":"48"},{"size":582,"mtime":1713814446496,"results":"84","hashOfConfig":"48"},{"size":1595,"mtime":1713814446612,"results":"85","hashOfConfig":"48"},{"size":2829,"mtime":1713814446342,"results":"86","hashOfConfig":"48"},{"size":367,"mtime":1713814446794,"results":"87","hashOfConfig":"48"},{"size":717,"mtime":1713814448192,"results":"88","hashOfConfig":"48"},{"size":991,"mtime":1713814448155,"results":"89","hashOfConfig":"48"},{"size":1124,"mtime":1713814448227,"results":"90","hashOfConfig":"48"},{"size":1327,"mtime":1713814448119,"results":"91","hashOfConfig":"48"},{"size":814,"mtime":1713814448082,"results":"92","hashOfConfig":"48"},{"size":844,"mtime":1713814448043,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fkzj22",{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\index.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\App.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\store.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\actions\\userActions.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\context\\socketContex.jsx",["202","203","204"],"import { createContext, useContext, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n// import socketClient from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\n\nconst SocketContext = createContext();\n\nexport const useSocketContext = () => {\n  return useContext(SocketContext);\n};\n\nexport const SocketContextProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const { error, loading, user } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (user) {\n      const socket = io(\"http://127.0.0.1:5000\", {\n        query: {\n          userId: user._id,\n        },\n      });\n\n      setSocket(socket);\n\n      // socket.on() is used to listen to the events. can be used both on client and server side\n      socket.on(\"getOnlineUsers\", (users) => {\n        setOnlineUsers(users);\n      });\n\n      return () => {\n        socket.close();\n      };\n    } else {\n      if (socket) {\n        socket.close();\n        setSocket(null);\n      }\n    }\n  }, [user]);\n\n  return (\n    <SocketContext.Provider value={{ socket, onlineUsers }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\home\\Home.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\login\\Login.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\newpost\\NewPost.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\header\\Header.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\account\\Account.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\updateProfile\\UpdateProfile.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\register\\Register.js",["205"],"import {\n  Avatar,\n  Button,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { clearUserError, userRegister } from \"../../store/actions/userActions\";\nimport programmingLanguages from \"../../utilis/prograamingName\";\n\nimport \"./Register.css\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const { loading, error, user } = useSelector((state) => state.user);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [avatar, setAvatar] = useState(\"\");\n\n  const [skills, setSkills] = useState([]);\n  const [aboutme, setAboutme] = useState(\"\");\n\n  // const handleImageChange = (e) => {\n  //   const file = e.target.files[0];\n\n  //   const Reader = new FileReader();\n  //   Reader.readAsDataURL(file);\n\n  //   Reader.onload = () => {\n  //     if (Reader.readyState === 2) {\n  //       setAvatar(Reader.result);\n  //     }\n  //   };\n  // };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (email.endsWith(\"@vitstudent.ac.in\") === false) {\n      toast.error(\"Email is not belongs to vit\");\n      return;\n    }\n    await dispatch(userRegister({ name, email, password, skills, aboutme }));\n  };\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      dispatch(clearUserError());\n    }\n    if (user) {\n      toast.success(\"Registered successfully\");\n    }\n  }, [dispatch, error, user]);\n  return (\n    <div className=\"register\">\n      <form className=\"registerForm\" onSubmit={submitHandler}>\n        <Typography variant=\"h3\" style={{ padding: \"2vmax\" }}>\n          ForkIT\n        </Typography>\n\n        {/* <Avatar\n          src={avatar}\n          alt=\"User\"\n          sx={{ height: \"10vmax\", width: \"10vmax\" }}\n        />\n\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} /> */}\n\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={name}\n          placeholder=\"Name\"\n          className=\"registerInputs\"\n          required\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          placeholder=\"Email\"\n          className=\"registerInputs\"\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          className=\"registerInputs\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <FormControl sx={{ m: 1, minWidth: 120 }} className=\"registerInputs\">\n          <InputLabel id=\"demo-simple-select-helper-label\">\n            Add Skills\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-helper-label\"\n            id=\"demo-simple-select-helper\"\n            value={skills}\n            label=\"Add Skills\"\n            multiple={true}\n            onChange={(e) => setSkills(e.target.value)}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {programmingLanguages.map((name, idx) => (\n              <MenuItem value={name}>{name}</MenuItem>\n            ))}\n          </Select>\n          <FormHelperText>\n            Add skills in your profile, so that people can connect you\n          </FormHelperText>\n        </FormControl>\n\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"About Me\"\n          multiline\n          rows={4}\n          className=\"registerInputs\"\n          value={aboutme}\n          onChange={(e) => setAboutme(e.target.value)}\n        />\n\n        {/* <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} /> */}\n\n        <Link to=\"/\">\n          <Typography>Already Signed Up? Login Now</Typography>\n        </Link>\n\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={loading}\n        >\n          Sign Up\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\forgotPassword\\ForgotPassword.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\updatePassword\\UpdatePassword.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\notfound\\NotFound.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\forgotPassword\\ResetPassword.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\search\\Search.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\userProfile\\UserProfile.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Chat.js",["206","207"],"import React from \"react\";\nimport \"./chat.css\";\nimport Contacts from \"./Contacts\";\nimport MainChat from \"./MainChat\";\nimport { useSocketContext } from \"../../context/socketContex\";\nimport useConversation from \"../../zhustand/useConversation\";\nconst Chat = () => {\n  return (\n    <div className=\"main-chat-container\">\n      <div className=\"chat-container\">\n        <Contacts />\n        <MainChat />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\slices\\postSlices.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\slices\\userSlices.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\store\\actions\\postActions.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\user\\User.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\loader\\Loader.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\post\\Post.js",["208","209","210"],"import { Avatar, Button, Dialog, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport {\n  MoreVert,\n  Favorite,\n  FavoriteBorder,\n  ChatBubbleOutline,\n  DeleteOutline,\n} from \"@mui/icons-material\";\n\nimport ChatIcon from \"@mui/icons-material/Chat\";\n\nimport \"./Post.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  clearPostError,\n  clearPostMessage,\n  deletePost,\n  getAllMyPosts,\n  getAllPostOfUser,\n  postComment,\n  postLikeAndDislike,\n  updateCaption,\n} from \"../../store/actions/postActions\";\nimport {\n  followAndUnfollowUser,\n  getPostsOfFollowing,\n  getUserProfile,\n  userLoad,\n} from \"../../store/actions/userActions\";\nimport User from \"../user/User\";\nimport CommentCard from \"../commentCard/CommentCard.js\";\nimport toast from \"react-hot-toast\";\nimport useConversation from \"../../zhustand/useConversation.js\";\n\nconst Post = ({\n  postId,\n  caption,\n  postImage,\n  likes = [],\n  comments = [],\n  ownerImage,\n  ownerName,\n  ownerId,\n  owner,\n  ownerSkills,\n  isDelete = false,\n  isAccount = false,\n}) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { userID: userProfileId } = useParams();\n  const { user } = useSelector((state) => state.user);\n  const { error, message } = useSelector((state) => state.myPost);\n  const { loading: userProfileLoading, user: userProfile } = useSelector(\n    (state) => state.userProfile\n  );\n\n  const [liked, setLiked] = useState(false);\n  const [openLikeUser, setOpenLikeUser] = useState(false);\n  const [commentToggle, setCommentToggle] = useState(false);\n  const [commentValue, setCommentValue] = useState(\"\");\n  const [captionToggle, setCaptionToggle] = useState(false);\n  const [captionValue, setCaptionValue] = useState(caption);\n  const { selectedConversation, setSelectedConversation } = useConversation();\n\n  const [following, setFollowing] = useState(false);\n  const [followed, setFollowed] = useState(false);\n\n  const followHandler = async (userId) => {\n    // setFollowing(!following);\n    await dispatch(followAndUnfollowUser(userId));\n    dispatch(userLoad());\n  };\n\n  useEffect(() => {\n    if (user) {\n      const isFollowing = user.following.find(\n        (follower) => follower._id === ownerId\n      );\n      const isFollowed = user.followers.find(\n        (follower) => follower._id === ownerId\n      );\n      if (isFollowing) setFollowing(true);\n      else setFollowing(false);\n      if (isFollowed) setFollowed(true);\n      else setFollowed(false);\n      // user.followers.forEach((item) => {\n      //   if (item._id === LoggedInUser._id) {\n      //     setFollowing(true);\n      //   } else {\n      //     setFollowing(false);\n      //   }\n      // });\n    }\n  }, [user, ownerId]);\n\n  let connectName = \"\";\n  if (following && followed) {\n    connectName = \"Connected\";\n  } else if (following) {\n    connectName = \"Requested\";\n  } else {\n    connectName = \"Follow Back\";\n  }\n\n  const handleLike = async () => {\n    setLiked((prev) => !prev);\n    await dispatch(postLikeAndDislike(postId));\n    if (userProfileId) {\n      dispatch(getAllPostOfUser(userProfileId));\n    } else if (isAccount) {\n      dispatch(getAllMyPosts());\n    } else {\n      dispatch(getPostsOfFollowing());\n    }\n  };\n\n  const addCommentHandler = async (e) => {\n    e.preventDefault();\n    await dispatch(postComment(postId, commentValue));\n    if (userProfileId) {\n      dispatch(getAllPostOfUser(userProfileId));\n    } else if (isAccount) {\n      dispatch(getAllMyPosts());\n    } else {\n      dispatch(getPostsOfFollowing());\n    }\n  };\n\n  const deletePostHandler = async () => {\n    await dispatch(deletePost(postId));\n    dispatch(getAllMyPosts());\n    dispatch(userLoad());\n  };\n\n  const updateCaptionHandler = async (e) => {\n    e.preventDefault();\n    await dispatch(updateCaption(postId, captionValue));\n    dispatch(getAllMyPosts());\n  };\n\n  const commentHandler = () => {\n    setCommentToggle((prev) => !prev);\n  };\n\n  const chatHandlerPost = () => {\n    setSelectedConversation(owner);\n  };\n  useEffect(() => {\n    if (selectedConversation) {\n      navigate(\"/chat\");\n    }\n  }, [navigate, selectedConversation]);\n\n  useEffect(() => {\n    if (message) {\n      toast.success(message);\n      dispatch(clearPostMessage());\n    }\n    if (error) {\n      toast.error(error);\n      dispatch(clearPostError());\n    }\n  }, [dispatch, error, message]);\n\n  useEffect(() => {\n    likes.forEach((like) => {\n      if (like._id === user._id) {\n        setLiked(true);\n      }\n    });\n  }, [likes, user._id]);\n\n  return (\n    <>\n      <div className=\"post\">\n        <div className=\"postDetails-container\">\n          <div className=\"postDetails\">\n            <Avatar\n              className=\"post-Details-avatar\"\n              src={ownerImage}\n              alt=\"User\"\n              sx={{\n                height: \"3vmax\",\n                width: \"3vmax\",\n              }}\n            />\n            <div className=\"post-Details-name\">\n              <Link to={`/user/${ownerId}`}>\n                <Typography className=\"post-Details-username\" fontWeight={700}>\n                  {ownerName}\n                </Typography>\n              </Link>\n              <h3>\n                {ownerSkills?.length > 0 &&\n                  ownerSkills.map((skill, idx) => `${skill}, `)}\n              </h3>\n            </div>\n          </div>\n\n          <Button\n            variant=\"contained\"\n            className={`${connectName === \"Requested\" ? \"send-requested\" : \"\"}`}\n            onClick={() => followHandler(ownerId)}\n          >\n            {connectName}\n          </Button>\n        </div>\n\n        {isAccount ? (\n          <div className=\"postHeader\">\n            <Button onClick={() => setCaptionToggle(!captionToggle)}>\n              <MoreVert />\n            </Button>\n          </div>\n        ) : null}\n\n        <img src={postImage} alt=\"Post\" />\n\n        <Typography className=\"caption-name\" style={{ alignSelf: \"center\" }}>\n          {caption}\n        </Typography>\n\n        <button\n          style={{\n            border: \"none\",\n            backgroundColor: \"white\",\n            cursor: \"pointer\",\n            margin: \"1vmax 2vmax\",\n          }}\n          onClick={() => setOpenLikeUser((prev) => !prev)}\n          disabled={likes.length === 0 ? true : false}\n        >\n          <Typography>{likes.length} Likes</Typography>\n        </button>\n\n        <div className=\"postFooter\">\n          <Button onClick={handleLike}>\n            {liked ? <Favorite style={{ color: \"red\" }} /> : <FavoriteBorder />}\n          </Button>\n\n          <Button onClick={commentHandler}>\n            <ChatBubbleOutline />\n          </Button>\n\n          <Button\n            onClick={chatHandlerPost}\n            disabled={connectName === \"Connected\" ? false : true}\n          >\n            <ChatIcon />\n          </Button>\n\n          {isDelete ? (\n            <Button onClick={deletePostHandler}>\n              <DeleteOutline />\n            </Button>\n          ) : null}\n        </div>\n\n        <Dialog\n          open={openLikeUser}\n          onClose={() => setOpenLikeUser((prev) => !prev)}\n        >\n          <div className=\"DialogBox\">\n            <Typography variant=\"h6\">Liked By</Typography>\n\n            {likes.map((like) => (\n              <User\n                key={like._id}\n                userId={like._id}\n                name={like.name}\n                avatar={like.avatar.url}\n              />\n            ))}\n          </div>\n        </Dialog>\n\n        <Dialog\n          open={commentToggle}\n          onClose={() => setCommentToggle((prev) => !prev)}\n        >\n          <div className=\"DialogBox\">\n            <Typography variant=\"h4\">Comments</Typography>\n\n            <div className=\"comments-container\">\n              <div className=\"comment-form\">\n                <form onSubmit={addCommentHandler}>\n                  <div className=\"textarea-container\">\n                    <textarea\n                      placeholder=\"Write your comment here...\"\n                      rows=\"4\"\n                      value={commentValue}\n                      onChange={(e) => setCommentValue(e.target.value)}\n                    ></textarea>\n                    <button type=\"button\" className=\"generate-button\">\n                      Generate\n                    </button>\n                  </div>\n                  <button type=\"submit\" className=\"submit-button\">\n                    Post Comment\n                  </button>\n                </form>\n              </div>\n\n              {comments && comments.length > 0 ? (\n                comments.map((item) => (\n                  <CommentCard\n                    userId={item.user._id}\n                    name={item.user.name}\n                    avatar={item.user.avatar.url}\n                    comment={item.comment}\n                    commentId={item._id}\n                    key={item._id}\n                    postId={postId}\n                    isAccount={isAccount}\n                  />\n                ))\n              ) : (\n                <Typography>No comments Yet</Typography>\n              )}\n            </div>\n          </div>\n        </Dialog>\n\n        <Dialog\n          open={captionToggle}\n          onClose={() => setCaptionToggle(!captionToggle)}\n        >\n          <div className=\"DialogBox\">\n            <Typography variant=\"h4\">Update Caption</Typography>\n\n            <form className=\"commentForm\" onSubmit={updateCaptionHandler}>\n              <input\n                type=\"text\"\n                value={captionValue}\n                onChange={(e) => setCaptionValue(e.target.value)}\n                placeholder=\"Caption Here...\"\n                required\n              />\n              <Button type=\"submit\" variant=\"contained\">\n                Update\n              </Button>\n            </form>\n          </div>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default Post;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Contacts.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\MainChat.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\utilis\\prograamingName.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\zhustand\\useConversation.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\commentCard\\CommentCard.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\ContactSearchInput.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\ContactsList.js",["211"],"import React from \"react\";\nimport useGetConversations from \"../../hooks/useGetConversations\";\nimport Contact from \"./Contact\";\n\nconst ContactsList = () => {\n  const { loading, conversations } = useGetConversations();\n  return (\n    <>\n      <div className=\"chat-contact-container\">\n        {conversations &&\n          conversations.map((conversation, idx) => (\n            <Contact\n              key={conversation._id}\n              conversation={conversation}\n              lastIdx={idx === conversations.length - 1}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default ContactsList;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\SendMessage.js",["212","213","214","215","216","217","218"],"import React, { useEffect, useState } from \"react\";\n// import { BsSend } from \"react-icons/bs\";\nimport useSendMessage from \"../../hooks/useSendMessage\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { MdInsertEmoticon } from \"react-icons/md\";\nimport useGetEmotionMessage from \"../../hooks/useGetEmotionMessage\";\nimport useListenMessages from \"../../hooks/useListenMessages\";\nimport { Button } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nconst SendMessage = ({\n  onUploadChatImage,\n  images,\n  onCleanChatImageHandler,\n  emotionPermissionAllowed,\n}) => {\n  const [message, setMessage] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const { loading, sendMessage } = useSendMessage();\n  const { loading: emotionMessageLoading, getEmotionMessage } =\n    useGetEmotionMessage();\n\n  const [emojie, setEmojie] = useState(true);\n  // useListenMessages();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // if (!message) return;\n    await sendMessage(message, images);\n    setMessage(\"\");\n    onCleanChatImageHandler();\n  };\n\n  const handelEmojieSubmit = async (e) => {\n    e.preventDefault();\n    if (!emojie) return;\n  };\n\n  return (\n    <div className=\"chat-input\">\n      {/* <button onClick={handleEmotionMessage}>Predict Me</button> */}\n      <form action=\"\" onSubmit={handleSubmit}>\n        <div className=\"input-chat-file-container\">\n          <input\n            type=\"file\"\n            name=\"avatar\"\n            className=\"input-chat-file\"\n            accept=\"image/*\"\n            onChange={onUploadChatImage}\n            multiple\n          />\n          <i className=\"fas fa-camera\" style={{ marginTop: \"3px\" }} />\n        </div>\n        <button onClick={handelEmojieSubmit} className=\"emoji-picker-button\">\n          <i\n            className=\"far fa-laugh-beam emoji-picker-icon\"\n            onClick={() => setEmojie(!emojie)}\n          ></i>\n        </button>\n\n        <input\n          type=\"text\"\n          placeholder=\"Type your message here!\"\n          value={message}\n          className=\"input-chat-message\"\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        {/* {loading ? (\n          <span className=\"loader-small loader-chat-input\"></span>\n        ) : ( \n          <button className=\"send-message-button\">\n           <i className=\"fas fa-paper-plane\" type=\"submit\"></i>\n           </button>\n         \n        {/* )} */}\n        <Button\n          variant=\"outlined\"\n          type=\"submit\"\n          disabled={loading}\n          endIcon={<SendIcon />}\n        >\n          Send\n        </Button>\n      </form>\n      {/* {showEmojiPicker && (\n        <div className=\"emoji-picker-container\">\n          <EmojiPicker\n            onEmojiClick={handleEmojiClick}\n            pickerStyle={{ width: \"100%\" }}\n          />\n        </div>\n      )} */}\n      {!emojie ? (\n        <div className=\"maria\">\n          <EmojiPicker\n            open={!emojie}\n            emojiStyle=\"google\"\n            onEmojiClick={(e) => setMessage((input) => input + e.emoji)}\n            theme=\"dark\"\n            className=\"emoji-picker-container\"\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default SendMessage;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\ImageUploadPreview.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Messages.js",["219","220","221","222","223","224"],"import React, { useEffect, useRef, useState } from \"react\";\n// import Message from \"./Message\";\nimport useGetMessages from \"./../../hooks/useGetMessages\";\nimport Message from \"./Message\";\nimport { useSocketContext } from \"../../context/socketContex\";\nimport extractTime from \"./extractTime\";\nimport { Button } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport useConversation from \"../../zhustand/useConversation\";\n// import MessageSkeleton from \"./MessageSkeleton\";\n\nconst Messages = () => {\n  const { messages, loading } = useGetMessages();\n  const lastMessageRef = useRef();\n\n  const { selectedConversation, setSelectedConversation } = useConversation();\n\n  const currentTime = extractTime(new Date().toISOString());\n\n  useEffect(() => {\n    setTimeout(() => {\n      lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, 100);\n  }, [messages]);\n  return (\n    <>\n      <div className=\"chat-messages\">\n        <p className=\"chat-time\">Today at {currentTime}</p>\n\n        {!loading &&\n          messages?.length > 0 &&\n          messages.map((message, index) => (\n            <div\n              key={index + 1}\n              ref={index === messages?.length - 1 ? lastMessageRef : null}\n            >\n              <Message message={message} />\n            </div>\n          ))}\n        {/* {loading && [...Array(5)].map((_, idx) => <MessageSkeleton key={idx} />)} */}\n        {!loading && messages?.length === 0 && (\n          <p className=\"no-messages\">\n            Send a message to start the conversation\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Messages;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\NoChatSelected.js",["225","226"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst NoChatSelected = () => {\n  const { error, loading, user } = useSelector((state) => state.user);\n\n  return (\n    <div className=\"no-chat-selected\">\n      <div>\n        <div className=\"message\">\n          <p>\n            Welcome <span className=\"username\">{user.name}</span> 👋❄\n          </p>\n          <p>Select a chat to start messaging</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoChatSelected;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\CurrentUserHeader.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Message.js",["227","228","229","230"],"import React from \"react\";\nimport useConversation from \"../../zhustand/useConversation\";\n// import { extractTime } from \"./extractTime\";\nimport useListenMessages from \"../../hooks/useListenMessages\";\nimport { useSelector } from \"react-redux\";\nimport extractTime from \"./extractTime\";\n\nconst Message = ({ message }) => {\n  const { error, loading, user } = useSelector((state) => state.user);\n  const { selectedConversation } = useConversation();\n  useListenMessages();\n  const fromMe = message.senderId === user._id;\n  const formattedTime = extractTime(message.createdAt);\n  const chatClassName = fromMe ? \"chat-by-me\" : \"chat-by-other\";\n  const profilePic = fromMe\n    ? user.avatar.url\n    : selectedConversation?.avatar.url;\n  const bubbleColor = fromMe ? \"bubble-me\" : \"bubble-other\";\n  const shakeClass = message.shouldShake ? \"shake\" : \"\";\n\n  let displayImage = <></>;\n  if (message.message !== \"\") {\n    displayImage = (\n      <div className={`chat-message ${chatClassName} ${shakeClass}`}>\n        {message.message}{\" \"}\n        <span className=\"chat-time-formatted\">{formattedTime}</span>\n      </div>\n    );\n  }\n\n  if (message?.images?.length > 0) {\n    displayImage = message.images.map((image, index) => (\n      <div\n        className={`chat-message ${chatClassName} ${shakeClass} chat-by-me-image`}\n        key={index + 1}\n      >\n        <div className={`chat-message-image-container ${shakeClass}`}>\n          <img src={image.url} alt=\"chat pic\" />\n        </div>\n      </div>\n    ));\n  }\n\n  return (\n    <>\n      <div>{displayImage}</div>\n    </>\n  );\n};\n\nexport default Message;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\Contact.js",["231"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport useConversation from \"../../zhustand/useConversation\";\nimport { useSocketContext } from \"../../context/socketContex\";\nimport useContactMessages from \"../../hooks/useContactMessages\";\nimport Loader from \"../loader/Loader\";\nimport { useSelector } from \"react-redux\";\nconst Contact = ({ conversation, lastIdx }) => {\n  const { selectedConversation, setSelectedConversation } = useConversation();\n  const { loading, messages } = useContactMessages(conversation._id);\n  const { user } = useSelector((state) => state.user);\n  const [following, setFollowing] = useState(false);\n  const [followed, setFollowed] = useState(false);\n\n  const { onlineUsers } = useSocketContext();\n\n  const isOnline = onlineUsers.includes(conversation._id);\n\n  let lastMessage = \"\";\n  if (messages?.length > 0) {\n    const message_data = messages[messages.length - 1];\n    if (message_data?.message) {\n      lastMessage = messages[messages.length - 1].message;\n    } else if (message_data?.images) {\n      lastMessage = \"📷 Image\";\n    }\n  } else {\n    lastMessage = \"No message yet\";\n  }\n\n  useEffect(() => {\n    if (user) {\n      const isFollowing = user.following.find(\n        (follower) => follower._id === conversation._id\n      );\n      const isFollowed = user.followers.find(\n        (follower) => follower._id === conversation._id\n      );\n      if (isFollowing) setFollowing(true);\n      else setFollowing(false);\n      if (isFollowed) setFollowed(true);\n      else setFollowed(false);\n    }\n  }, [user, conversation._id]);\n\n  let connectName = \"\";\n  if (following && followed) {\n    connectName = \"Connected\";\n  } else if (following) {\n    connectName = \"Requested\";\n  } else {\n    connectName = \"Follow Back\";\n  }\n\n  useEffect(() => {\n    return () => {\n      setSelectedConversation(null);\n    };\n  }, [setSelectedConversation]);\n  const isSelected = selectedConversation?._id === conversation._id;\n  const handleClick = () => {\n    if (connectName !== \"Connected\") return;\n    setSelectedConversation(conversation);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"loader-small\"></div>\n      ) : (\n        <div\n          className={`chat-contact ${isSelected ? \"selected\" : \"\"} ${\n            connectName !== \"Connected\" ? \"make-disabled\" : \"\"\n          }`}\n          onClick={handleClick}\n        >\n          <img\n            className=\"chat-pic rogers\"\n            src={conversation.avatar.url}\n            alt={conversation.name}\n          />\n          <span\n            className={`chat-badge ${isOnline ? \"user-online-now\" : \"\"}`}\n          ></span>\n          <span className=\"chat-name\">{conversation.name}</span>\n          <p className=\"chat-message\">{lastMessage}</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Contact;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\components\\chat\\extractTime.js",[],"D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useListenMessages.js",["232"],"import { useEffect } from \"react\";\nimport { useSocketContext } from \"../context/socketContex\";\nimport useConversation from \"../zhustand/useConversation\";\nimport notificationSound from \"../assets/message_sound.mp3\";\nconst useListenMessages = () => {\n  const { socket } = useSocketContext();\n  const { messages, setMessages } = useConversation();\n\n  useEffect(() => {\n    socket?.on(\"newMessage\", (newMessage) => {\n      newMessage.shouldShake = true;\n      // const sound = new Audio(notificationSound);\n      setMessages([...messages, newMessage]);\n      // sound.play();\n    });\n\n    return () => {\n      socket?.off(\"newMessage\");\n    };\n  }, [socket, setMessages, messages]);\n};\n\nexport default useListenMessages;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useGetMessages.js",["233"],"import React, { useEffect, useState } from \"react\";\nimport useConversation from \"../zhustand/useConversation\";\nimport toast from \"react-hot-toast\";\n\nconst useGetMessages = () => {\n  const [loading, setLoading] = useState(false);\n  const { messages, setMessages, selectedConversation } = useConversation();\n\n  useEffect(() => {\n    const getMessages = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(`/api/v1/messages/${selectedConversation._id}`);\n        const data = await res.json();\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        setMessages(data.messages);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (selectedConversation?._id) {\n      getMessages();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedConversation?._id, setMessages]);\n  return { messages, loading };\n};\n\nexport default useGetMessages;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useSendMessage.js",["234"],"import React, { useState } from \"react\";\nimport useConversation from \"./../zhustand/useConversation\";\nimport { toast } from \"react-hot-toast\";\n\nconst useSendMessage = () => {\n  const [loading, setLoading] = useState(false);\n  const { messages, setMessages, selectedConversation } = useConversation();\n  const sendMessage = async (message, images) => {\n    setLoading(true);\n    try {\n      const res = await fetch(\n        `/api/v1/messages/send/${selectedConversation._id}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ message, images }),\n        }\n      );\n      const data = await res.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      console.log(data.newMessage);\n      if (messages) {\n        setMessages([...messages, data.newMessage]);\n      } else {\n        setMessages([data.newMessage]);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return { loading, sendMessage };\n};\n\nexport default useSendMessage;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useGetEmotionMessage.js",["235","236"],"import React, { useState } from \"react\";\nimport useConversation from \"./../zhustand/useConversation\";\nimport { toast } from \"react-hot-toast\";\nimport { useSelector } from \"react-redux\";\n\nconst useGetEmotionMessage = () => {\n  const [loading, setLoading] = useState(false);\n  const { messages, setMessages, selectedConversation } = useConversation();\n  const { error, user } = useSelector((state) => state.user);\n\n  const getEmotionMessage = async () => {\n    setLoading(true);\n    try {\n      const senderId = user._id;\n      const receiverId = selectedConversation._id;\n      console.log(senderId, receiverId);\n      const res = await fetch(\n        `http://127.0.0.1:8000/send_emotion_message/${receiverId}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ senderId: senderId }),\n        }\n      );\n\n      const data = await res.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      const newMessage = JSON.parse(data.newMessage);\n      setMessages([...messages, newMessage]);\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return { loading, getEmotionMessage };\n};\n\nexport default useGetEmotionMessage;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useGetConversations.js",["237"],"import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\n\nconst useGetConversations = () => {\n  const [loading, setLoading] = useState(false);\n  const [conversations, setConversations] = useState([]);\n\n  useEffect(() => {\n    const getConversations = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(\"/api/v1/users/getAllUser\");\n        const data = await res.json();\n        console.log(data.users);\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        setConversations(data.users);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getConversations();\n  }, []);\n  return { loading, conversations };\n};\n\nexport default useGetConversations;\n","D:\\vit\\assignments\\sem2\\cloud\\cloud-project-forkit-new-main\\cloud-project-forkit-new-main\\frontend\\src\\hooks\\useContactMessages.js",["238"],"import React, { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nconst useContactMessages = (reciverId) => {\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(`/api/v1/messages/${reciverId}`);\n        const data = await res.json();\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        setMessages(data.messages);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMessages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reciverId, setMessages]);\n  return { messages, loading };\n};\n\nexport default useContactMessages;\n",{"ruleId":"239","severity":1,"message":"240","line":15,"column":11,"nodeType":"241","messageId":"242","endLine":15,"endColumn":16},{"ruleId":"239","severity":1,"message":"243","line":15,"column":18,"nodeType":"241","messageId":"242","endLine":15,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":41,"column":6,"nodeType":"246","endLine":41,"endColumn":12,"suggestions":"247"},{"ruleId":"239","severity":1,"message":"248","line":2,"column":3,"nodeType":"241","messageId":"242","endLine":2,"endColumn":9},{"ruleId":"239","severity":1,"message":"249","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":26},{"ruleId":"239","severity":1,"message":"250","line":6,"column":8,"nodeType":"241","messageId":"242","endLine":6,"endColumn":23},{"ruleId":"239","severity":1,"message":"251","line":29,"column":3,"nodeType":"241","messageId":"242","endLine":29,"endColumn":17},{"ruleId":"239","severity":1,"message":"252","line":56,"column":20,"nodeType":"241","messageId":"242","endLine":56,"endColumn":38},{"ruleId":"239","severity":1,"message":"253","line":56,"column":46,"nodeType":"241","messageId":"242","endLine":56,"endColumn":57},{"ruleId":"239","severity":1,"message":"243","line":6,"column":11,"nodeType":"241","messageId":"242","endLine":6,"endColumn":18},{"ruleId":"239","severity":1,"message":"254","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"255","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":26},{"ruleId":"239","severity":1,"message":"256","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":25},{"ruleId":"239","severity":1,"message":"257","line":17,"column":10,"nodeType":"241","messageId":"242","endLine":17,"endColumn":25},{"ruleId":"239","severity":1,"message":"258","line":17,"column":27,"nodeType":"241","messageId":"242","endLine":17,"endColumn":45},{"ruleId":"239","severity":1,"message":"259","line":19,"column":20,"nodeType":"241","messageId":"242","endLine":19,"endColumn":41},{"ruleId":"239","severity":1,"message":"260","line":19,"column":43,"nodeType":"241","messageId":"242","endLine":19,"endColumn":60},{"ruleId":"239","severity":1,"message":"261","line":1,"column":36,"nodeType":"241","messageId":"242","endLine":1,"endColumn":44},{"ruleId":"239","severity":1,"message":"249","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":26},{"ruleId":"239","severity":1,"message":"262","line":7,"column":10,"nodeType":"241","messageId":"242","endLine":7,"endColumn":16},{"ruleId":"239","severity":1,"message":"263","line":8,"column":10,"nodeType":"241","messageId":"242","endLine":8,"endColumn":21},{"ruleId":"239","severity":1,"message":"264","line":16,"column":11,"nodeType":"241","messageId":"242","endLine":16,"endColumn":31},{"ruleId":"239","severity":1,"message":"265","line":16,"column":33,"nodeType":"241","messageId":"242","endLine":16,"endColumn":56},{"ruleId":"239","severity":1,"message":"240","line":5,"column":11,"nodeType":"241","messageId":"242","endLine":5,"endColumn":16},{"ruleId":"239","severity":1,"message":"243","line":5,"column":18,"nodeType":"241","messageId":"242","endLine":5,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":9,"column":11,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"243","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":25},{"ruleId":"239","severity":1,"message":"266","line":15,"column":9,"nodeType":"241","messageId":"242","endLine":15,"endColumn":19},{"ruleId":"239","severity":1,"message":"267","line":18,"column":9,"nodeType":"241","messageId":"242","endLine":18,"endColumn":20},{"ruleId":"239","severity":1,"message":"268","line":6,"column":8,"nodeType":"241","messageId":"242","endLine":6,"endColumn":14},{"ruleId":"239","severity":1,"message":"269","line":4,"column":8,"nodeType":"241","messageId":"242","endLine":4,"endColumn":25},{"ruleId":"239","severity":1,"message":"270","line":1,"column":8,"nodeType":"241","messageId":"242","endLine":1,"endColumn":13},{"ruleId":"239","severity":1,"message":"270","line":1,"column":8,"nodeType":"241","messageId":"242","endLine":1,"endColumn":13},{"ruleId":"239","severity":1,"message":"270","line":1,"column":8,"nodeType":"241","messageId":"242","endLine":1,"endColumn":13},{"ruleId":"239","severity":1,"message":"240","line":9,"column":11,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"270","line":1,"column":8,"nodeType":"241","messageId":"242","endLine":1,"endColumn":13},{"ruleId":"239","severity":1,"message":"270","line":1,"column":8,"nodeType":"241","messageId":"242","endLine":1,"endColumn":13},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'Avatar' is defined but never used.","'useSocketContext' is defined but never used.","'useConversation' is defined but never used.","'getUserProfile' is defined but never used.","'userProfileLoading' is assigned a value but never used.","'userProfile' is assigned a value but never used.","'useEffect' is defined but never used.","'MdInsertEmoticon' is defined but never used.","'useListenMessages' is defined but never used.","'showEmojiPicker' is assigned a value but never used.","'setShowEmojiPicker' is assigned a value but never used.","'emotionMessageLoading' is assigned a value but never used.","'getEmotionMessage' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'useSelector' is defined but never used.","'selectedConversation' is assigned a value but never used.","'setSelectedConversation' is assigned a value but never used.","'profilePic' is assigned a value but never used.","'bubbleColor' is assigned a value but never used.","'Loader' is defined but never used.","'notificationSound' is defined but never used.","'React' is defined but never used.",{"desc":"272","fix":"273"},"Update the dependencies array to be: [socket, user]",{"range":"274","text":"275"},[1069,1075],"[socket, user]"]